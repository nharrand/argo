fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
output
#detailAPIdata <- function(lib_d) {
lib_d <- "gson"
output <- data.frame(col.names = c("Library", "API", "Full", "Used", "Tradeoff"))
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)
tp <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package) %>% unique() %>% count()
fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
output <- rbind(output, c(lib_d, "Package", fp$n[1], up$n[1], tp$n[1]))
output <- rbind(output, c(lib_d, "Type", ft$n[1], ut$n[1], tt$n[1]))
output <- rbind(output, c(lib_d, "Element", fe$n[1], ue$n[1], te$n[1]))
#return(output)
#}
#s_gson <- detailAPIdata("gson")
output
output <- data.frame()
cname(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
output <- data.frame()
cnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
output <- data.frame()
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
#detailAPIdata <- function(lib_d) {
lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer())
#colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)
tp <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package) %>% unique() %>% count()
fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
output <- rbind(output, c(lib_d, "Package", fp$n[1], up$n[1], tp$n[1]))
output <- rbind(output, c(lib_d, "Type", ft$n[1], ut$n[1], tt$n[1]))
output <- rbind(output, c(lib_d, "Element", fe$n[1], ue$n[1], te$n[1]))
#return(output)
#}
#s_gson <- detailAPIdata("gson")
output
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer())
output
c(lib_d, "Package", fp$n[1], up$n[1], tp$n[1])
output, c(lib_d, "Package", as.integer(fp$n[1]), as.integer(up$n[1]), as.integer(tp$n[1]))
c(lib_d, "Package", as.integer(fp$n[1]), as.integer(up$n[1]), as.integer(tp$n[1]))
rbind(output, c(lib_d, "Package", as.integer(fp$n[1]), as.integer(up$n[1]), as.integer(tp$n[1])))
rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer())
rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1]))
output <- rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, c(Library=lib_d, API="Type", ft$n[1], ut$n[1], tt$n[1]))
output <- rbind(output, c(Library=lib_d, API="Element", fe$n[1], ue$n[1], te$n[1]))
#detailAPIdata <- function(lib_d) {
lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
#colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)
tp <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package) %>% unique() %>% count()
fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
output <- rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, c(Library=lib_d, API="Type", ft$n[1], ut$n[1], tt$n[1]))
output <- rbind(output, c(Library=lib_d, API="Element", fe$n[1], ue$n[1], te$n[1]))
#return(output)
#}
#s_gson <- detailAPIdata("gson")
output
#detailAPIdata <- function(lib_d) {
lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
#colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)
tp <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package) %>% unique() %>% count()
fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
output <- rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, c(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, c(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
#return(output)
#}
#s_gson <- detailAPIdata("gson")
output
View(fe)
View(fp)
View(ft)
View(te)
View(tp)
View(ue)
tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
lib_usages %>% select(Package, Type) %>% unique() %>% count()
gson %>% select(Package, Type, Element) %>% unique() %>% count()
gson %>% select(Package, Type) %>% unique() %>% count()
#detailAPIdata <- function(lib_d) {
lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
#colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package) %>% unique() %>% count()
fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
output <- rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, c(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, c(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
#return(output)
#}
#s_gson <- detailAPIdata("gson")
output
tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
tradeoff %>% select(Package, Type) %>% unique() %>% count()
tradeoff %>% select(Package) %>% unique() %>% count()
#detailAPIdata <- function(lib_d) {
lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
#colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
output <- rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, c(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, c(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
#return(output)
#}
#s_gson <- detailAPIdata("gson")
lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
#colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])
rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
#detailAPIdata <- function(lib_d) {
lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
output <- rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, c(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, c(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
#return(output)
#}
#s_gson <- detailAPIdata("gson")
rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])
rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output
View(output)
c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1]))
rbind(output, c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
rbind(output, data.frame(c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1]))))
data.frame(c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
data.frame(c(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
rbind(output, data.frame(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
#detailAPIdata <- function(lib_d) {
lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package) %>% unique() %>% count()
output <- rbind(output, data.frame(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
#return(output)
#}
#s_gson <- detailAPIdata("gson")
output
#detailAPIdata <- function(lib_d) {
lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- gson %>% select(Package) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
output <- rbind(output, data.frame(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
#return(output)
#}
#s_gson <- detailAPIdata("gson")
output
detailAPIdata <- function(lib_d) {
#lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- gson %>% select(Package) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
output <- rbind(output, data.frame(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
return(output)
}
s_gson <- detailAPIdata("gson")
s_gson
detailAPIdata <- function(lib_d) {
#lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == "gson") %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- gson %>% select(Package) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
output <- rbind(output, data.frame(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
return(output)
}
s_gson <- detailAPIdata("gson")
s_json <- detailAPIdata("json")
s_jsonsimple <- detailAPIdata("jsonsimple")
s_fastjson <- detailAPIdata("fastjson")
s_jackson <- detailAPIdata("jackson")
s_all <- rbind(s_gson,s_jackson, s_jsonsimple, s_json, s_fastjson)
s_all
detailAPIdata <- function(lib_d) {
#lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == lib_d) %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- gson %>% select(Package) %>% unique() %>% count()
ft <- gson %>% select(Package, Type) %>% unique() %>% count()
fe <- gson %>% select(Package, Type, Element) %>% unique() %>% count()
output <- rbind(output, data.frame(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
return(output)
}
s_gson <- detailAPIdata("gson")
s_json <- detailAPIdata("json")
s_jsonsimple <- detailAPIdata("jsonsimple")
s_fastjson <- detailAPIdata("fastjson")
s_jackson <- detailAPIdata("jackson")
s_all <- rbind(s_gson,s_jackson, s_jsonsimple, s_json, s_fastjson)
s_all
detailAPIdata <- function(lib_d) {
#lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == lib_d) %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- apis %>% filter(Library == lib_d) %>% select(Package) %>% unique() %>% count()
ft <- apis %>% filter(Library == lib_d) %>% select(Package, Type) %>% unique() %>% count()
fe <- apis %>% filter(Library == lib_d) %>% select(Package, Type, Element) %>% unique() %>% count()
output <- rbind(output, data.frame(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
return(output)
}
s_gson <- detailAPIdata("gson")
s_json <- detailAPIdata("json")
s_jsonsimple <- detailAPIdata("jsonsimple")
s_fastjson <- detailAPIdata("fastjson")
s_jackson <- detailAPIdata("jackson")
s_all <- rbind(s_gson,s_jackson, s_jsonsimple, s_json, s_fastjson)
s_all
detailAPIdata <- function(lib_d) {
#lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == lib_d) %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages, all = FALSE)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- apis %>% filter(Library == lib_d) %>% select(Package) %>% unique() %>% count()
ft <- apis %>% filter(Library == lib_d) %>% select(Package, Type) %>% unique() %>% count()
fe <- apis %>% filter(Library == lib_d) %>% select(Package, Type, Element) %>% unique() %>% count()
output <- rbind(output, data.frame(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
return(output)
}
s_gson <- detailAPIdata("gson")
s_json <- detailAPIdata("json")
s_jsonsimple <- detailAPIdata("jsonsimple")
s_fastjson <- detailAPIdata("fastjson")
s_jackson <- detailAPIdata("jackson")
s_all <- rbind(s_gson,s_jackson, s_jsonsimple, s_json, s_fastjson)
s_all
detailAPIdata <- function(lib_d) {
#lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == lib_d) %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages, all = FALSE)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- apis %>% filter(Library == lib_d) %>% select(Package) %>% unique() %>% count()
ft <- apis %>% filter(Library == lib_d) %>% select(Package, Type) %>% unique() %>% count()
fe <- apis %>% filter(Library == lib_d) %>% select(Package, Type, Element) %>% unique() %>% count()
output <- rbind(output, data.frame(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
return(output)
}
s_gson <- detailAPIdata("gson")
s_json <- detailAPIdata("json")
s_jsonsimple <- detailAPIdata("jsonsimple")
s_fastjson <- detailAPIdata("fastjson")
s_jackson <- detailAPIdata("jackson")
s_all <- rbind(s_gson,s_jackson, s_jsonsimple, s_json, s_fastjson)
xtable(s_all)
detailAPIdata <- function(lib_d) {
#lib_d <- "gson"
output <- data.frame(Library=character(), API=character(), Full=integer(), Used=integer(), Tradeoff=integer(), stringsAsFactors = FALSE)
colnames(output) <- c("Library", "API", "Full", "Used", "Tradeoff")
lib_packages <- apis %>% filter(Library == lib_d) %>% select(Package) %>% unique()
lib_usages <-merge(usages, lib_packages, all = FALSE)
lib_client <- lib_usages %>% select(Repo) %>% unique() %>% count()
up <- lib_usages %>% select(Package) %>% unique() %>% count()
ut <- lib_usages %>% select(Package, Type) %>% unique() %>% count()
ue <- lib_usages %>% select(Package, Type, Element) %>% unique() %>% count()
#lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% select(nbClient) %>% summary()
tradeoff <- lib_usages %>% group_by(Package, Type, Element) %>% summarise(nbClient= n()) %>% filter(nbClient >= (0.005 * lib_client$n[1])) %>% select(Package, Type, Element)  %>% ungroup()
tp <- tradeoff %>% select(Package) %>% unique() %>% count()
tt <- tradeoff %>% select(Package, Type) %>% unique() %>% count()
te <- tradeoff %>% select(Package, Type, Element) %>% unique() %>% count()
fp <- apis %>% filter(Library == lib_d) %>% select(Package) %>% unique() %>% count()
ft <- apis %>% filter(Library == lib_d) %>% select(Package, Type) %>% unique() %>% count()
fe <- apis %>% filter(Library == lib_d) %>% select(Package, Type, Element) %>% unique() %>% count()
output <- rbind(output, data.frame(Library=lib_d, API="Package", Full=as.integer(fp$n[1]), Used=as.integer(up$n[1]), Tradeoff=as.integer(tp$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Type", Full=as.integer(ft$n[1]), Used=as.integer(ut$n[1]), Tradeoff=as.integer(tt$n[1])))
output <- rbind(output, data.frame(Library=lib_d, API="Element", Full=as.integer(fe$n[1]), Used=as.integer(ue$n[1]), Tradeoff=as.integer(te$n[1])))
return(output)
}
s_gson <- detailAPIdata("gson")
s_json <- detailAPIdata("json")
s_jsonsimple <- detailAPIdata("jsonsimple")
s_fastjson <- detailAPIdata("fastjson")
s_jackson <- detailAPIdata("jackson")
s_all <- rbind(s_gson,s_jackson, s_jsonsimple, s_json, s_fastjson)
xtable(s_all, include.rownames = FALSE)
xtable(s_all, include.rownames = FALSE)
